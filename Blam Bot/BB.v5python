{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nfront_left_wheel = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nfront_right_wheel = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nback_left_wheel = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nback_right_wheel = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\nWHEEL_SPEED = 0.5\nARM_SPEED = -1\n\ndef move_arms(power_total=None):\n    if not power_total:\n        power_total = controller_1.axis2.position() * ARM_SPEED\n\n    if power_total == 0:\n        arm_left.stop()\n        arm_right.stop()\n    else:\n        arm_left.spin(FORWARD)\n        arm_right.spin(FORWARD)\n\n    arm_left.set_velocity(power_total, PERCENT)\n    arm_right.set_velocity(power_total, PERCENT)\n\ndef move_wheels(power_left=None, power_right=None):\n    if not power_left or not power_right:\n        vertical_velocity = controller_1.axis3.position()\n        horizontal_velocity = controller_1.axis4.position()\n        power_left = (vertical_velocity + horizontal_velocity) * WHEEL_SPEED\n        power_right = (vertical_velocity - horizontal_velocity) * WHEEL_SPEED\n\n    if power_left == 0 and power_right == 0:\n        front_left_wheel.stop()\n        front_right_wheel.stop()\n        back_left_wheel.stop()\n        back_right_wheel.stop()\n    else:\n        front_left_wheel.spin(FORWARD)\n        front_right_wheel.spin(FORWARD)\n        back_left_wheel.spin(FORWARD)\n        back_right_wheel.spin(FORWARD)\n\n    front_left_wheel.set_velocity(power_left, PERCENT)\n    front_right_wheel.set_velocity(power_right, PERCENT)\n    back_left_wheel.set_velocity(power_left, PERCENT)\n    back_right_wheel.set_velocity(power_right, PERCENT)\n\ndef start_auto_period():\n    print('Autonomous Period Started')\n\ndef start_manual_period():\n    print('Driver Control Period Started')\n    controller_1.axis3.changed(move_wheels)\n    controller_1.axis4.changed(move_wheels)\n    controller_1.axis2.changed(move_arms)\n\ndef __main__():\n    print('Running')\n    Competition(start_manual_period, start_auto_period)\n\nif __name__ == '__main__':\n    __main__()\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"front_left_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"front_right_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"back_left_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"back_right_wheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}